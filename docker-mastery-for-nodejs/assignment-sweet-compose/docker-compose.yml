version: '2.4'

services:
  redis:
    image: redis:alpine
    healthcheck:
            test: redis-cli ping
    networks:
      - frontend

  db:
    image: postgres:9.6
    healthcheck:
            test: pg_isready -h 127.0.0.1
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      - backend
  
  traefix:
          image: traefix:1.7-alpine
          volume: 
                - "80:80"
          command:
                - --docker
                - --docker.domain=traefik
                - --docker.watch
                - --api
                - --defaultentrypoints=http,https
          labels:
                - traefik.port=8080
                - traefik.frontend.rule=Host:traefik.localhost,traefik.vcap.me

  vote:
    image: bretfisher/examplevotingapp_vote
    depends_on:
        redis:
                condition: service_healthy
    labels:
      - traefik.port=80
      - traefik.frontend.rule=Host:vote.localhost,vote.vcap.me
    ports:
      - '5000:80'
    networks:
      - frontend

  result:
    build: 
      context: result
    depends_on:
            db:
                    condition: service_healthy 
    labels:
      - traefik.port=2368
      - traefik.frontend.rule=Host:result.localhost,result.vcap.me 
    volumes:
            ./result:/var/lib/result/app:delegated
    ports:
      - '5001:80'
    networks:
      - backend

  worker:
    image: bretfisher/examplevotingapp_worker:java
    depends_on:
            db:
                    condition: service_healthy
            redis:
                    condition: service_healthy
    networks:
      - frontend
      - backend

networks:
    frontend:
    backend:

volumes:
    db-data:

